#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TorHazahav
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TOR_HAZAHAV")]
	public partial class tzDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertactivity(activity instance);
    partial void Updateactivity(activity instance);
    partial void Deleteactivity(activity instance);
    partial void Insertwh_address(wh_address instance);
    partial void Updatewh_address(wh_address instance);
    partial void Deletewh_address(wh_address instance);
    partial void Insertcontact(contact instance);
    partial void Updatecontact(contact instance);
    partial void Deletecontact(contact instance);
    partial void Insertcontact_address(contact_address instance);
    partial void Updatecontact_address(contact_address instance);
    partial void Deletecontact_address(contact_address instance);
    partial void Insertcontact_phone(contact_phone instance);
    partial void Updatecontact_phone(contact_phone instance);
    partial void Deletecontact_phone(contact_phone instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void Insertcustomer_activity(customer_activity instance);
    partial void Updatecustomer_activity(customer_activity instance);
    partial void Deletecustomer_activity(customer_activity instance);
    partial void Insertcustomer_address(customer_address instance);
    partial void Updatecustomer_address(customer_address instance);
    partial void Deletecustomer_address(customer_address instance);
    partial void Insertcustomer_contact(customer_contact instance);
    partial void Updatecustomer_contact(customer_contact instance);
    partial void Deletecustomer_contact(customer_contact instance);
    partial void Insertcustomer_medical_history(customer_medical_history instance);
    partial void Updatecustomer_medical_history(customer_medical_history instance);
    partial void Deletecustomer_medical_history(customer_medical_history instance);
    partial void Insertcustomer_phone(customer_phone instance);
    partial void Updatecustomer_phone(customer_phone instance);
    partial void Deletecustomer_phone(customer_phone instance);
    partial void Insertcustomer_program(customer_program instance);
    partial void Updatecustomer_program(customer_program instance);
    partial void Deletecustomer_program(customer_program instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertext_contact_address(ext_contact_address instance);
    partial void Updateext_contact_address(ext_contact_address instance);
    partial void Deleteext_contact_address(ext_contact_address instance);
    partial void Insertexternal_contact(external_contact instance);
    partial void Updateexternal_contact(external_contact instance);
    partial void Deleteexternal_contact(external_contact instance);
    partial void Insertphone(phone instance);
    partial void Updatephone(phone instance);
    partial void Deletephone(phone instance);
    partial void Insertprogram(program instance);
    partial void Updateprogram(program instance);
    partial void Deleteprogram(program instance);
    partial void Insertrequest(request instance);
    partial void Updaterequest(request instance);
    partial void Deleterequest(request instance);
    partial void Insertvolunteer(volunteer instance);
    partial void Updatevolunteer(volunteer instance);
    partial void Deletevolunteer(volunteer instance);
    partial void InsertVolunteer_for_customer(Volunteer_for_customer instance);
    partial void UpdateVolunteer_for_customer(Volunteer_for_customer instance);
    partial void DeleteVolunteer_for_customer(Volunteer_for_customer instance);
    #endregion
		
		public tzDataContext() : 
				base(global::TorHazahav.Properties.Settings.Default.TOR_HAZAHAVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public tzDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tzDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tzDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tzDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<activity> activities
		{
			get
			{
				return this.GetTable<activity>();
			}
		}
		
		public System.Data.Linq.Table<wh_address> wh_addresses
		{
			get
			{
				return this.GetTable<wh_address>();
			}
		}
		
		public System.Data.Linq.Table<contact> contacts
		{
			get
			{
				return this.GetTable<contact>();
			}
		}
		
		public System.Data.Linq.Table<contact_address> contact_addresses
		{
			get
			{
				return this.GetTable<contact_address>();
			}
		}
		
		public System.Data.Linq.Table<contact_phone> contact_phones
		{
			get
			{
				return this.GetTable<contact_phone>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<customer_activity> customer_activities
		{
			get
			{
				return this.GetTable<customer_activity>();
			}
		}
		
		public System.Data.Linq.Table<customer_address> customer_addresses
		{
			get
			{
				return this.GetTable<customer_address>();
			}
		}
		
		public System.Data.Linq.Table<customer_contact> customer_contacts
		{
			get
			{
				return this.GetTable<customer_contact>();
			}
		}
		
		public System.Data.Linq.Table<customer_medical_history> customer_medical_histories
		{
			get
			{
				return this.GetTable<customer_medical_history>();
			}
		}
		
		public System.Data.Linq.Table<customer_phone> customer_phones
		{
			get
			{
				return this.GetTable<customer_phone>();
			}
		}
		
		public System.Data.Linq.Table<customer_program> customer_programs
		{
			get
			{
				return this.GetTable<customer_program>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<ext_contact_address> ext_contact_addresses
		{
			get
			{
				return this.GetTable<ext_contact_address>();
			}
		}
		
		public System.Data.Linq.Table<external_contact> external_contacts
		{
			get
			{
				return this.GetTable<external_contact>();
			}
		}
		
		public System.Data.Linq.Table<phone> phones
		{
			get
			{
				return this.GetTable<phone>();
			}
		}
		
		public System.Data.Linq.Table<program> programs
		{
			get
			{
				return this.GetTable<program>();
			}
		}
		
		public System.Data.Linq.Table<request> requests
		{
			get
			{
				return this.GetTable<request>();
			}
		}
		
		public System.Data.Linq.Table<volunteer> volunteers
		{
			get
			{
				return this.GetTable<volunteer>();
			}
		}
		
		public System.Data.Linq.Table<Volunteer_for_customer> Volunteer_for_customers
		{
			get
			{
				return this.GetTable<Volunteer_for_customer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.activity")]
	public partial class activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _activity_type;
		
		private string _activity_details;
		
		private System.Nullable<bool> _qualification;
		
		private EntitySet<customer_activity> _customer_activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onactivity_typeChanging(string value);
    partial void Onactivity_typeChanged();
    partial void Onactivity_detailsChanging(string value);
    partial void Onactivity_detailsChanged();
    partial void OnqualificationChanging(System.Nullable<bool> value);
    partial void OnqualificationChanged();
    #endregion
		
		public activity()
		{
			this._customer_activities = new EntitySet<customer_activity>(new Action<customer_activity>(this.attach_customer_activities), new Action<customer_activity>(this.detach_customer_activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_type", DbType="NVarChar(30)")]
		public string activity_type
		{
			get
			{
				return this._activity_type;
			}
			set
			{
				if ((this._activity_type != value))
				{
					this.Onactivity_typeChanging(value);
					this.SendPropertyChanging();
					this._activity_type = value;
					this.SendPropertyChanged("activity_type");
					this.Onactivity_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_details", DbType="NVarChar(250)")]
		public string activity_details
		{
			get
			{
				return this._activity_details;
			}
			set
			{
				if ((this._activity_details != value))
				{
					this.Onactivity_detailsChanging(value);
					this.SendPropertyChanging();
					this._activity_details = value;
					this.SendPropertyChanged("activity_details");
					this.Onactivity_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qualification", DbType="Bit")]
		public System.Nullable<bool> qualification
		{
			get
			{
				return this._qualification;
			}
			set
			{
				if ((this._qualification != value))
				{
					this.OnqualificationChanging(value);
					this.SendPropertyChanging();
					this._qualification = value;
					this.SendPropertyChanged("qualification");
					this.OnqualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="activity_customer_activity", Storage="_customer_activities", ThisKey="ID", OtherKey="activity_id")]
		public EntitySet<customer_activity> customer_activities
		{
			get
			{
				return this._customer_activities;
			}
			set
			{
				this._customer_activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customer_activities(customer_activity entity)
		{
			this.SendPropertyChanging();
			entity.activity = this;
		}
		
		private void detach_customer_activities(customer_activity entity)
		{
			this.SendPropertyChanging();
			entity.activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wh_address")]
	public partial class wh_address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _city_name;
		
		private string _street_name;
		
		private System.Nullable<int> _house_num;
		
		private System.Nullable<int> _appartment_num;
		
		private string _neighborhood;
		
		private string _zip_code;
		
		private EntitySet<contact_address> _contact_addresses;
		
		private EntitySet<customer_address> _customer_addresses;
		
		private EntitySet<ext_contact_address> _ext_contact_addresses;
		
		private EntitySet<external_contact> _external_contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncity_nameChanging(string value);
    partial void Oncity_nameChanged();
    partial void Onstreet_nameChanging(string value);
    partial void Onstreet_nameChanged();
    partial void Onhouse_numChanging(System.Nullable<int> value);
    partial void Onhouse_numChanged();
    partial void Onappartment_numChanging(System.Nullable<int> value);
    partial void Onappartment_numChanged();
    partial void OnneighborhoodChanging(string value);
    partial void OnneighborhoodChanged();
    partial void Onzip_codeChanging(string value);
    partial void Onzip_codeChanged();
    #endregion
		
		public wh_address()
		{
			this._contact_addresses = new EntitySet<contact_address>(new Action<contact_address>(this.attach_contact_addresses), new Action<contact_address>(this.detach_contact_addresses));
			this._customer_addresses = new EntitySet<customer_address>(new Action<customer_address>(this.attach_customer_addresses), new Action<customer_address>(this.detach_customer_addresses));
			this._ext_contact_addresses = new EntitySet<ext_contact_address>(new Action<ext_contact_address>(this.attach_ext_contact_addresses), new Action<ext_contact_address>(this.detach_ext_contact_addresses));
			this._external_contacts = new EntitySet<external_contact>(new Action<external_contact>(this.attach_external_contacts), new Action<external_contact>(this.detach_external_contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this.Oncity_nameChanging(value);
					this.SendPropertyChanging();
					this._city_name = value;
					this.SendPropertyChanged("city_name");
					this.Oncity_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string street_name
		{
			get
			{
				return this._street_name;
			}
			set
			{
				if ((this._street_name != value))
				{
					this.Onstreet_nameChanging(value);
					this.SendPropertyChanging();
					this._street_name = value;
					this.SendPropertyChanged("street_name");
					this.Onstreet_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_house_num", DbType="Int")]
		public System.Nullable<int> house_num
		{
			get
			{
				return this._house_num;
			}
			set
			{
				if ((this._house_num != value))
				{
					this.Onhouse_numChanging(value);
					this.SendPropertyChanging();
					this._house_num = value;
					this.SendPropertyChanged("house_num");
					this.Onhouse_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appartment_num", DbType="Int")]
		public System.Nullable<int> appartment_num
		{
			get
			{
				return this._appartment_num;
			}
			set
			{
				if ((this._appartment_num != value))
				{
					this.Onappartment_numChanging(value);
					this.SendPropertyChanging();
					this._appartment_num = value;
					this.SendPropertyChanged("appartment_num");
					this.Onappartment_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_neighborhood", DbType="NVarChar(30)")]
		public string neighborhood
		{
			get
			{
				return this._neighborhood;
			}
			set
			{
				if ((this._neighborhood != value))
				{
					this.OnneighborhoodChanging(value);
					this.SendPropertyChanging();
					this._neighborhood = value;
					this.SendPropertyChanged("neighborhood");
					this.OnneighborhoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip_code", DbType="VarChar(5)")]
		public string zip_code
		{
			get
			{
				return this._zip_code;
			}
			set
			{
				if ((this._zip_code != value))
				{
					this.Onzip_codeChanging(value);
					this.SendPropertyChanging();
					this._zip_code = value;
					this.SendPropertyChanged("zip_code");
					this.Onzip_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wh_address_contact_address", Storage="_contact_addresses", ThisKey="ID", OtherKey="address_id")]
		public EntitySet<contact_address> contact_addresses
		{
			get
			{
				return this._contact_addresses;
			}
			set
			{
				this._contact_addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wh_address_customer_address", Storage="_customer_addresses", ThisKey="ID", OtherKey="address_id")]
		public EntitySet<customer_address> customer_addresses
		{
			get
			{
				return this._customer_addresses;
			}
			set
			{
				this._customer_addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wh_address_ext_contact_address", Storage="_ext_contact_addresses", ThisKey="ID", OtherKey="address_id")]
		public EntitySet<ext_contact_address> ext_contact_addresses
		{
			get
			{
				return this._ext_contact_addresses;
			}
			set
			{
				this._ext_contact_addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wh_address_external_contact", Storage="_external_contacts", ThisKey="ID", OtherKey="address_id")]
		public EntitySet<external_contact> external_contacts
		{
			get
			{
				return this._external_contacts;
			}
			set
			{
				this._external_contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact_addresses(contact_address entity)
		{
			this.SendPropertyChanging();
			entity.wh_address = this;
		}
		
		private void detach_contact_addresses(contact_address entity)
		{
			this.SendPropertyChanging();
			entity.wh_address = null;
		}
		
		private void attach_customer_addresses(customer_address entity)
		{
			this.SendPropertyChanging();
			entity.wh_address = this;
		}
		
		private void detach_customer_addresses(customer_address entity)
		{
			this.SendPropertyChanging();
			entity.wh_address = null;
		}
		
		private void attach_ext_contact_addresses(ext_contact_address entity)
		{
			this.SendPropertyChanging();
			entity.wh_address = this;
		}
		
		private void detach_ext_contact_addresses(ext_contact_address entity)
		{
			this.SendPropertyChanging();
			entity.wh_address = null;
		}
		
		private void attach_external_contacts(external_contact entity)
		{
			this.SendPropertyChanging();
			entity.wh_address = this;
		}
		
		private void detach_external_contacts(external_contact entity)
		{
			this.SendPropertyChanging();
			entity.wh_address = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contact")]
	public partial class contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _email_address;
		
		private string _job;
		
		private EntitySet<contact_address> _contact_addresses;
		
		private EntitySet<customer_contact> _customer_contacts;
		
		private EntitySet<ext_contact_address> _ext_contact_addresses;
		
		private EntitySet<request> _requests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onemail_addressChanging(string value);
    partial void Onemail_addressChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    #endregion
		
		public contact()
		{
			this._contact_addresses = new EntitySet<contact_address>(new Action<contact_address>(this.attach_contact_addresses), new Action<contact_address>(this.detach_contact_addresses));
			this._customer_contacts = new EntitySet<customer_contact>(new Action<customer_contact>(this.attach_customer_contacts), new Action<customer_contact>(this.detach_customer_contacts));
			this._ext_contact_addresses = new EntitySet<ext_contact_address>(new Action<ext_contact_address>(this.attach_ext_contact_addresses), new Action<ext_contact_address>(this.detach_ext_contact_addresses));
			this._requests = new EntitySet<request>(new Action<request>(this.attach_requests), new Action<request>(this.detach_requests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_address", DbType="VarChar(100)")]
		public string email_address
		{
			get
			{
				return this._email_address;
			}
			set
			{
				if ((this._email_address != value))
				{
					this.Onemail_addressChanging(value);
					this.SendPropertyChanging();
					this._email_address = value;
					this.SendPropertyChanged("email_address");
					this.Onemail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="NVarChar(50)")]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_contact_address", Storage="_contact_addresses", ThisKey="ID", OtherKey="contact_id")]
		public EntitySet<contact_address> contact_addresses
		{
			get
			{
				return this._contact_addresses;
			}
			set
			{
				this._contact_addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_customer_contact", Storage="_customer_contacts", ThisKey="ID", OtherKey="contact_id")]
		public EntitySet<customer_contact> customer_contacts
		{
			get
			{
				return this._customer_contacts;
			}
			set
			{
				this._customer_contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_ext_contact_address", Storage="_ext_contact_addresses", ThisKey="ID", OtherKey="contact_id")]
		public EntitySet<ext_contact_address> ext_contact_addresses
		{
			get
			{
				return this._ext_contact_addresses;
			}
			set
			{
				this._ext_contact_addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_request", Storage="_requests", ThisKey="ID", OtherKey="contact_id")]
		public EntitySet<request> requests
		{
			get
			{
				return this._requests;
			}
			set
			{
				this._requests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact_addresses(contact_address entity)
		{
			this.SendPropertyChanging();
			entity.contact = this;
		}
		
		private void detach_contact_addresses(contact_address entity)
		{
			this.SendPropertyChanging();
			entity.contact = null;
		}
		
		private void attach_customer_contacts(customer_contact entity)
		{
			this.SendPropertyChanging();
			entity.contact = this;
		}
		
		private void detach_customer_contacts(customer_contact entity)
		{
			this.SendPropertyChanging();
			entity.contact = null;
		}
		
		private void attach_ext_contact_addresses(ext_contact_address entity)
		{
			this.SendPropertyChanging();
			entity.contact = this;
		}
		
		private void detach_ext_contact_addresses(ext_contact_address entity)
		{
			this.SendPropertyChanging();
			entity.contact = null;
		}
		
		private void attach_requests(request entity)
		{
			this.SendPropertyChanging();
			entity.contact = this;
		}
		
		private void detach_requests(request entity)
		{
			this.SendPropertyChanging();
			entity.contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contact_address")]
	public partial class contact_address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contact_id;
		
		private int _address_id;
		
		private string _status;
		
		private string _type;
		
		private EntityRef<wh_address> _wh_address;
		
		private EntityRef<contact> _contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontact_idChanging(int value);
    partial void Oncontact_idChanged();
    partial void Onaddress_idChanging(int value);
    partial void Onaddress_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public contact_address()
		{
			this._wh_address = default(EntityRef<wh_address>);
			this._contact = default(EntityRef<contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					if (this._contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._wh_address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(30)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wh_address_contact_address", Storage="_wh_address", ThisKey="address_id", OtherKey="ID", IsForeignKey=true)]
		public wh_address wh_address
		{
			get
			{
				return this._wh_address.Entity;
			}
			set
			{
				wh_address previousValue = this._wh_address.Entity;
				if (((previousValue != value) 
							|| (this._wh_address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._wh_address.Entity = null;
						previousValue.contact_addresses.Remove(this);
					}
					this._wh_address.Entity = value;
					if ((value != null))
					{
						value.contact_addresses.Add(this);
						this._address_id = value.ID;
					}
					else
					{
						this._address_id = default(int);
					}
					this.SendPropertyChanged("wh_address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_contact_address", Storage="_contact", ThisKey="contact_id", OtherKey="ID", IsForeignKey=true)]
		public contact contact
		{
			get
			{
				return this._contact.Entity;
			}
			set
			{
				contact previousValue = this._contact.Entity;
				if (((previousValue != value) 
							|| (this._contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contact.Entity = null;
						previousValue.contact_addresses.Remove(this);
					}
					this._contact.Entity = value;
					if ((value != null))
					{
						value.contact_addresses.Add(this);
						this._contact_id = value.ID;
					}
					else
					{
						this._contact_id = default(int);
					}
					this.SendPropertyChanged("contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contact_phone")]
	public partial class contact_phone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _contact_id;
		
		private int _phone_id;
		
		private string _status;
		
		private string _type;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<phone> _phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontact_idChanging(string value);
    partial void Oncontact_idChanged();
    partial void Onphone_idChanging(int value);
    partial void Onphone_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public contact_phone()
		{
			this._Customer = default(EntityRef<Customer>);
			this._phone = default(EntityRef<phone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int phone_id
		{
			get
			{
				return this._phone_id;
			}
			set
			{
				if ((this._phone_id != value))
				{
					if (this._phone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onphone_idChanging(value);
					this.SendPropertyChanging();
					this._phone_id = value;
					this.SendPropertyChanged("phone_id");
					this.Onphone_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(30)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_contact_phone", Storage="_Customer", ThisKey="contact_id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.contact_phones.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.contact_phones.Add(this);
						this._contact_id = value.Id;
					}
					else
					{
						this._contact_id = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phone_contact_phone", Storage="_phone", ThisKey="phone_id", OtherKey="ID", IsForeignKey=true)]
		public phone phone
		{
			get
			{
				return this._phone.Entity;
			}
			set
			{
				phone previousValue = this._phone.Entity;
				if (((previousValue != value) 
							|| (this._phone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._phone.Entity = null;
						previousValue.contact_phones.Remove(this);
					}
					this._phone.Entity = value;
					if ((value != null))
					{
						value.contact_phones.Add(this);
						this._phone_id = value.ID;
					}
					else
					{
						this._phone_id = default(int);
					}
					this.SendPropertyChanged("phone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _gender;
		
		private System.Nullable<System.DateTime> _birthdate;
		
		private string _marital_status;
		
		private string _working;
		
		private System.Nullable<bool> _holocaust_survaviour;
		
		private string _mobility;
		
		private string _independency;
		
		private string _comments;
		
		private System.Nullable<bool> _entitled_todiscount;
		
		private string _email_address;
		
		private string _active_inclub;
		
		private string _day_care;
		
		private System.Nullable<bool> _foreign_worker;
		
		private System.Nullable<bool> _nursing_law;
		
		private string _status_cd;
		
		private EntitySet<contact_phone> _contact_phones;
		
		private EntitySet<customer_activity> _customer_activities;
		
		private EntitySet<customer_address> _customer_addresses;
		
		private EntitySet<customer_contact> _customer_contacts;
		
		private EntitySet<customer_medical_history> _customer_medical_histories;
		
		private EntitySet<customer_phone> _customer_phones;
		
		private EntitySet<customer_program> _customer_programs;
		
		private EntitySet<Volunteer_for_customer> _Volunteer_for_customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnbirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdateChanged();
    partial void Onmarital_statusChanging(string value);
    partial void Onmarital_statusChanged();
    partial void OnworkingChanging(string value);
    partial void OnworkingChanged();
    partial void Onholocaust_survaviourChanging(System.Nullable<bool> value);
    partial void Onholocaust_survaviourChanged();
    partial void OnmobilityChanging(string value);
    partial void OnmobilityChanged();
    partial void OnindependencyChanging(string value);
    partial void OnindependencyChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void Onentitled_todiscountChanging(System.Nullable<bool> value);
    partial void Onentitled_todiscountChanged();
    partial void Onemail_addressChanging(string value);
    partial void Onemail_addressChanged();
    partial void Onactive_inclubChanging(string value);
    partial void Onactive_inclubChanged();
    partial void Onday_careChanging(string value);
    partial void Onday_careChanged();
    partial void Onforeign_workerChanging(System.Nullable<bool> value);
    partial void Onforeign_workerChanged();
    partial void Onnursing_lawChanging(System.Nullable<bool> value);
    partial void Onnursing_lawChanged();
    partial void Onstatus_cdChanging(string value);
    partial void Onstatus_cdChanged();
    #endregion
		
		public Customer()
		{
			this._contact_phones = new EntitySet<contact_phone>(new Action<contact_phone>(this.attach_contact_phones), new Action<contact_phone>(this.detach_contact_phones));
			this._customer_activities = new EntitySet<customer_activity>(new Action<customer_activity>(this.attach_customer_activities), new Action<customer_activity>(this.detach_customer_activities));
			this._customer_addresses = new EntitySet<customer_address>(new Action<customer_address>(this.attach_customer_addresses), new Action<customer_address>(this.detach_customer_addresses));
			this._customer_contacts = new EntitySet<customer_contact>(new Action<customer_contact>(this.attach_customer_contacts), new Action<customer_contact>(this.detach_customer_contacts));
			this._customer_medical_histories = new EntitySet<customer_medical_history>(new Action<customer_medical_history>(this.attach_customer_medical_histories), new Action<customer_medical_history>(this.detach_customer_medical_histories));
			this._customer_phones = new EntitySet<customer_phone>(new Action<customer_phone>(this.attach_customer_phones), new Action<customer_phone>(this.detach_customer_phones));
			this._customer_programs = new EntitySet<customer_program>(new Action<customer_program>(this.attach_customer_programs), new Action<customer_program>(this.detach_customer_programs));
			this._Volunteer_for_customers = new EntitySet<Volunteer_for_customer>(new Action<Volunteer_for_customer>(this.attach_Volunteer_for_customers), new Action<Volunteer_for_customer>(this.detach_Volunteer_for_customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NChar(5)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this.OnbirthdateChanging(value);
					this.SendPropertyChanging();
					this._birthdate = value;
					this.SendPropertyChanged("birthdate");
					this.OnbirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marital_status", DbType="NChar(10)")]
		public string marital_status
		{
			get
			{
				return this._marital_status;
			}
			set
			{
				if ((this._marital_status != value))
				{
					this.Onmarital_statusChanging(value);
					this.SendPropertyChanging();
					this._marital_status = value;
					this.SendPropertyChanged("marital_status");
					this.Onmarital_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_working", DbType="NVarChar(30)")]
		public string working
		{
			get
			{
				return this._working;
			}
			set
			{
				if ((this._working != value))
				{
					this.OnworkingChanging(value);
					this.SendPropertyChanging();
					this._working = value;
					this.SendPropertyChanged("working");
					this.OnworkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_holocaust_survaviour", DbType="Bit")]
		public System.Nullable<bool> holocaust_survaviour
		{
			get
			{
				return this._holocaust_survaviour;
			}
			set
			{
				if ((this._holocaust_survaviour != value))
				{
					this.Onholocaust_survaviourChanging(value);
					this.SendPropertyChanging();
					this._holocaust_survaviour = value;
					this.SendPropertyChanged("holocaust_survaviour");
					this.Onholocaust_survaviourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobility", DbType="NVarChar(30)")]
		public string mobility
		{
			get
			{
				return this._mobility;
			}
			set
			{
				if ((this._mobility != value))
				{
					this.OnmobilityChanging(value);
					this.SendPropertyChanging();
					this._mobility = value;
					this.SendPropertyChanged("mobility");
					this.OnmobilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_independency", DbType="NVarChar(30)")]
		public string independency
		{
			get
			{
				return this._independency;
			}
			set
			{
				if ((this._independency != value))
				{
					this.OnindependencyChanging(value);
					this.SendPropertyChanging();
					this._independency = value;
					this.SendPropertyChanged("independency");
					this.OnindependencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(200)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entitled_todiscount", DbType="Bit")]
		public System.Nullable<bool> entitled_todiscount
		{
			get
			{
				return this._entitled_todiscount;
			}
			set
			{
				if ((this._entitled_todiscount != value))
				{
					this.Onentitled_todiscountChanging(value);
					this.SendPropertyChanging();
					this._entitled_todiscount = value;
					this.SendPropertyChanged("entitled_todiscount");
					this.Onentitled_todiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_address", DbType="NVarChar(100)")]
		public string email_address
		{
			get
			{
				return this._email_address;
			}
			set
			{
				if ((this._email_address != value))
				{
					this.Onemail_addressChanging(value);
					this.SendPropertyChanging();
					this._email_address = value;
					this.SendPropertyChanged("email_address");
					this.Onemail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active_inclub", DbType="NVarChar(30)")]
		public string active_inclub
		{
			get
			{
				return this._active_inclub;
			}
			set
			{
				if ((this._active_inclub != value))
				{
					this.Onactive_inclubChanging(value);
					this.SendPropertyChanging();
					this._active_inclub = value;
					this.SendPropertyChanged("active_inclub");
					this.Onactive_inclubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day_care", DbType="NVarChar(30)")]
		public string day_care
		{
			get
			{
				return this._day_care;
			}
			set
			{
				if ((this._day_care != value))
				{
					this.Onday_careChanging(value);
					this.SendPropertyChanging();
					this._day_care = value;
					this.SendPropertyChanged("day_care");
					this.Onday_careChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foreign_worker", DbType="Bit")]
		public System.Nullable<bool> foreign_worker
		{
			get
			{
				return this._foreign_worker;
			}
			set
			{
				if ((this._foreign_worker != value))
				{
					this.Onforeign_workerChanging(value);
					this.SendPropertyChanging();
					this._foreign_worker = value;
					this.SendPropertyChanged("foreign_worker");
					this.Onforeign_workerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nursing_law", DbType="Bit")]
		public System.Nullable<bool> nursing_law
		{
			get
			{
				return this._nursing_law;
			}
			set
			{
				if ((this._nursing_law != value))
				{
					this.Onnursing_lawChanging(value);
					this.SendPropertyChanging();
					this._nursing_law = value;
					this.SendPropertyChanged("nursing_law");
					this.Onnursing_lawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_cd", DbType="NVarChar(30)")]
		public string status_cd
		{
			get
			{
				return this._status_cd;
			}
			set
			{
				if ((this._status_cd != value))
				{
					this.Onstatus_cdChanging(value);
					this.SendPropertyChanging();
					this._status_cd = value;
					this.SendPropertyChanged("status_cd");
					this.Onstatus_cdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_contact_phone", Storage="_contact_phones", ThisKey="Id", OtherKey="contact_id")]
		public EntitySet<contact_phone> contact_phones
		{
			get
			{
				return this._contact_phones;
			}
			set
			{
				this._contact_phones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_activity", Storage="_customer_activities", ThisKey="Id", OtherKey="customer_id")]
		public EntitySet<customer_activity> customer_activities
		{
			get
			{
				return this._customer_activities;
			}
			set
			{
				this._customer_activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_address", Storage="_customer_addresses", ThisKey="Id", OtherKey="customer_id")]
		public EntitySet<customer_address> customer_addresses
		{
			get
			{
				return this._customer_addresses;
			}
			set
			{
				this._customer_addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_contact", Storage="_customer_contacts", ThisKey="Id", OtherKey="customer_id")]
		public EntitySet<customer_contact> customer_contacts
		{
			get
			{
				return this._customer_contacts;
			}
			set
			{
				this._customer_contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_medical_history", Storage="_customer_medical_histories", ThisKey="Id", OtherKey="customer_id")]
		public EntitySet<customer_medical_history> customer_medical_histories
		{
			get
			{
				return this._customer_medical_histories;
			}
			set
			{
				this._customer_medical_histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_phone", Storage="_customer_phones", ThisKey="Id", OtherKey="customer_id")]
		public EntitySet<customer_phone> customer_phones
		{
			get
			{
				return this._customer_phones;
			}
			set
			{
				this._customer_phones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_program", Storage="_customer_programs", ThisKey="Id", OtherKey="customer_id")]
		public EntitySet<customer_program> customer_programs
		{
			get
			{
				return this._customer_programs;
			}
			set
			{
				this._customer_programs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Volunteer_for_customer", Storage="_Volunteer_for_customers", ThisKey="Id", OtherKey="customer_id")]
		public EntitySet<Volunteer_for_customer> Volunteer_for_customers
		{
			get
			{
				return this._Volunteer_for_customers;
			}
			set
			{
				this._Volunteer_for_customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact_phones(contact_phone entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_contact_phones(contact_phone entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_customer_activities(customer_activity entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_customer_activities(customer_activity entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_customer_addresses(customer_address entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_customer_addresses(customer_address entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_customer_contacts(customer_contact entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_customer_contacts(customer_contact entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_customer_medical_histories(customer_medical_history entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_customer_medical_histories(customer_medical_history entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_customer_phones(customer_phone entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_customer_phones(customer_phone entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_customer_programs(customer_program entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_customer_programs(customer_program entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Volunteer_for_customers(Volunteer_for_customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Volunteer_for_customers(Volunteer_for_customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_activity")]
	public partial class customer_activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private int _activity_id;
		
		private string _status;
		
		private EntityRef<activity> _activity;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onactivity_idChanging(int value);
    partial void Onactivity_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public customer_activity()
		{
			this._activity = default(EntityRef<activity>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int activity_id
		{
			get
			{
				return this._activity_id;
			}
			set
			{
				if ((this._activity_id != value))
				{
					if (this._activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onactivity_idChanging(value);
					this.SendPropertyChanging();
					this._activity_id = value;
					this.SendPropertyChanged("activity_id");
					this.Onactivity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="activity_customer_activity", Storage="_activity", ThisKey="activity_id", OtherKey="ID", IsForeignKey=true)]
		public activity activity
		{
			get
			{
				return this._activity.Entity;
			}
			set
			{
				activity previousValue = this._activity.Entity;
				if (((previousValue != value) 
							|| (this._activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._activity.Entity = null;
						previousValue.customer_activities.Remove(this);
					}
					this._activity.Entity = value;
					if ((value != null))
					{
						value.customer_activities.Add(this);
						this._activity_id = value.ID;
					}
					else
					{
						this._activity_id = default(int);
					}
					this.SendPropertyChanged("activity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_activity", Storage="_Customer", ThisKey="customer_id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.customer_activities.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.customer_activities.Add(this);
						this._customer_id = value.Id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_address")]
	public partial class customer_address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private int _address_id;
		
		private string _status;
		
		private EntityRef<wh_address> _wh_address;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onaddress_idChanging(int value);
    partial void Onaddress_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public customer_address()
		{
			this._wh_address = default(EntityRef<wh_address>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._wh_address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wh_address_customer_address", Storage="_wh_address", ThisKey="address_id", OtherKey="ID", IsForeignKey=true)]
		public wh_address wh_address
		{
			get
			{
				return this._wh_address.Entity;
			}
			set
			{
				wh_address previousValue = this._wh_address.Entity;
				if (((previousValue != value) 
							|| (this._wh_address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._wh_address.Entity = null;
						previousValue.customer_addresses.Remove(this);
					}
					this._wh_address.Entity = value;
					if ((value != null))
					{
						value.customer_addresses.Add(this);
						this._address_id = value.ID;
					}
					else
					{
						this._address_id = default(int);
					}
					this.SendPropertyChanged("wh_address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_address", Storage="_Customer", ThisKey="customer_id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.customer_addresses.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.customer_addresses.Add(this);
						this._customer_id = value.Id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_contact")]
	public partial class customer_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private int _contact_id;
		
		private string _status;
		
		private string _type;
		
		private EntityRef<contact> _contact;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Oncontact_idChanging(int value);
    partial void Oncontact_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public customer_contact()
		{
			this._contact = default(EntityRef<contact>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					if (this._contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(30)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_customer_contact", Storage="_contact", ThisKey="contact_id", OtherKey="ID", IsForeignKey=true)]
		public contact contact
		{
			get
			{
				return this._contact.Entity;
			}
			set
			{
				contact previousValue = this._contact.Entity;
				if (((previousValue != value) 
							|| (this._contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contact.Entity = null;
						previousValue.customer_contacts.Remove(this);
					}
					this._contact.Entity = value;
					if ((value != null))
					{
						value.customer_contacts.Add(this);
						this._contact_id = value.ID;
					}
					else
					{
						this._contact_id = default(int);
					}
					this.SendPropertyChanged("contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_contact", Storage="_Customer", ThisKey="customer_id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.customer_contacts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.customer_contacts.Add(this);
						this._customer_id = value.Id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_medical_history")]
	public partial class customer_medical_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private string _desease;
		
		private string _comments;
		
		private string _severity;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void OndeseaseChanging(string value);
    partial void OndeseaseChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OnseverityChanging(string value);
    partial void OnseverityChanged();
    #endregion
		
		public customer_medical_history()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desease", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string desease
		{
			get
			{
				return this._desease;
			}
			set
			{
				if ((this._desease != value))
				{
					this.OndeseaseChanging(value);
					this.SendPropertyChanging();
					this._desease = value;
					this.SendPropertyChanged("desease");
					this.OndeseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(250)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_severity", DbType="NVarChar(50)")]
		public string severity
		{
			get
			{
				return this._severity;
			}
			set
			{
				if ((this._severity != value))
				{
					this.OnseverityChanging(value);
					this.SendPropertyChanging();
					this._severity = value;
					this.SendPropertyChanged("severity");
					this.OnseverityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_medical_history", Storage="_Customer", ThisKey="customer_id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.customer_medical_histories.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.customer_medical_histories.Add(this);
						this._customer_id = value.Id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_phone")]
	public partial class customer_phone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private int _phone_id;
		
		private string _status;
		
		private string _type;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<phone> _phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onphone_idChanging(int value);
    partial void Onphone_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public customer_phone()
		{
			this._Customer = default(EntityRef<Customer>);
			this._phone = default(EntityRef<phone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int phone_id
		{
			get
			{
				return this._phone_id;
			}
			set
			{
				if ((this._phone_id != value))
				{
					if (this._phone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onphone_idChanging(value);
					this.SendPropertyChanging();
					this._phone_id = value;
					this.SendPropertyChanged("phone_id");
					this.Onphone_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(30)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_phone", Storage="_Customer", ThisKey="customer_id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.customer_phones.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.customer_phones.Add(this);
						this._customer_id = value.Id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phone_customer_phone", Storage="_phone", ThisKey="phone_id", OtherKey="ID", IsForeignKey=true)]
		public phone phone
		{
			get
			{
				return this._phone.Entity;
			}
			set
			{
				phone previousValue = this._phone.Entity;
				if (((previousValue != value) 
							|| (this._phone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._phone.Entity = null;
						previousValue.customer_phones.Remove(this);
					}
					this._phone.Entity = value;
					if ((value != null))
					{
						value.customer_phones.Add(this);
						this._phone_id = value.ID;
					}
					else
					{
						this._phone_id = default(int);
					}
					this.SendPropertyChanged("phone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_program")]
	public partial class customer_program : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private int _program_id;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<program> _program;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onprogram_idChanging(int value);
    partial void Onprogram_idChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    #endregion
		
		public customer_program()
		{
			this._Customer = default(EntityRef<Customer>);
			this._program = default(EntityRef<program>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int program_id
		{
			get
			{
				return this._program_id;
			}
			set
			{
				if ((this._program_id != value))
				{
					if (this._program.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprogram_idChanging(value);
					this.SendPropertyChanging();
					this._program_id = value;
					this.SendPropertyChanged("program_id");
					this.Onprogram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_program", Storage="_Customer", ThisKey="customer_id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.customer_programs.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.customer_programs.Add(this);
						this._customer_id = value.Id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="program_customer_program", Storage="_program", ThisKey="program_id", OtherKey="ID", IsForeignKey=true)]
		public program program
		{
			get
			{
				return this._program.Entity;
			}
			set
			{
				program previousValue = this._program.Entity;
				if (((previousValue != value) 
							|| (this._program.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._program.Entity = null;
						previousValue.customer_programs.Remove(this);
					}
					this._program.Entity = value;
					if ((value != null))
					{
						value.customer_programs.Add(this);
						this._program_id = value.ID;
					}
					else
					{
						this._program_id = default(int);
					}
					this.SendPropertyChanged("program");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employee_id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _email_address;
		
		private string _job;
		
		private string _employee_status;
		
		private System.Nullable<int> _phone_id;
		
		private string _username;
		
		private string _u_password;
		
		private EntitySet<program> _programs;
		
		private EntitySet<request> _requests;
		
		private EntityRef<phone> _phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onemail_addressChanging(string value);
    partial void Onemail_addressChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void Onemployee_statusChanging(string value);
    partial void Onemployee_statusChanged();
    partial void Onphone_idChanging(System.Nullable<int> value);
    partial void Onphone_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onu_passwordChanging(string value);
    partial void Onu_passwordChanged();
    #endregion
		
		public employee()
		{
			this._programs = new EntitySet<program>(new Action<program>(this.attach_programs), new Action<program>(this.detach_programs));
			this._requests = new EntitySet<request>(new Action<request>(this.attach_requests), new Action<request>(this.detach_requests));
			this._phone = default(EntityRef<phone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_address", DbType="VarChar(100)")]
		public string email_address
		{
			get
			{
				return this._email_address;
			}
			set
			{
				if ((this._email_address != value))
				{
					this.Onemail_addressChanging(value);
					this.SendPropertyChanging();
					this._email_address = value;
					this.SendPropertyChanged("email_address");
					this.Onemail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="NVarChar(50)")]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_status", DbType="NVarChar(30)")]
		public string employee_status
		{
			get
			{
				return this._employee_status;
			}
			set
			{
				if ((this._employee_status != value))
				{
					this.Onemployee_statusChanging(value);
					this.SendPropertyChanging();
					this._employee_status = value;
					this.SendPropertyChanged("employee_status");
					this.Onemployee_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_id", DbType="Int")]
		public System.Nullable<int> phone_id
		{
			get
			{
				return this._phone_id;
			}
			set
			{
				if ((this._phone_id != value))
				{
					if (this._phone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onphone_idChanging(value);
					this.SendPropertyChanging();
					this._phone_id = value;
					this.SendPropertyChanged("phone_id");
					this.Onphone_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(10)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_password", DbType="VarChar(10)")]
		public string u_password
		{
			get
			{
				return this._u_password;
			}
			set
			{
				if ((this._u_password != value))
				{
					this.Onu_passwordChanging(value);
					this.SendPropertyChanging();
					this._u_password = value;
					this.SendPropertyChanged("u_password");
					this.Onu_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_program", Storage="_programs", ThisKey="employee_id", OtherKey="employee_id")]
		public EntitySet<program> programs
		{
			get
			{
				return this._programs;
			}
			set
			{
				this._programs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_request", Storage="_requests", ThisKey="employee_id", OtherKey="employee_id")]
		public EntitySet<request> requests
		{
			get
			{
				return this._requests;
			}
			set
			{
				this._requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phone_employee", Storage="_phone", ThisKey="phone_id", OtherKey="ID", IsForeignKey=true)]
		public phone phone
		{
			get
			{
				return this._phone.Entity;
			}
			set
			{
				phone previousValue = this._phone.Entity;
				if (((previousValue != value) 
							|| (this._phone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._phone.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._phone.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._phone_id = value.ID;
					}
					else
					{
						this._phone_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("phone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_programs(program entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_programs(program entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_requests(request entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_requests(request entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ext_contact_address")]
	public partial class ext_contact_address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contact_id;
		
		private int _address_id;
		
		private string _status;
		
		private string _type;
		
		private EntityRef<wh_address> _wh_address;
		
		private EntityRef<contact> _contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontact_idChanging(int value);
    partial void Oncontact_idChanged();
    partial void Onaddress_idChanging(int value);
    partial void Onaddress_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public ext_contact_address()
		{
			this._wh_address = default(EntityRef<wh_address>);
			this._contact = default(EntityRef<contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					if (this._contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._wh_address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(30)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(30)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wh_address_ext_contact_address", Storage="_wh_address", ThisKey="address_id", OtherKey="ID", IsForeignKey=true)]
		public wh_address wh_address
		{
			get
			{
				return this._wh_address.Entity;
			}
			set
			{
				wh_address previousValue = this._wh_address.Entity;
				if (((previousValue != value) 
							|| (this._wh_address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._wh_address.Entity = null;
						previousValue.ext_contact_addresses.Remove(this);
					}
					this._wh_address.Entity = value;
					if ((value != null))
					{
						value.ext_contact_addresses.Add(this);
						this._address_id = value.ID;
					}
					else
					{
						this._address_id = default(int);
					}
					this.SendPropertyChanged("wh_address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_ext_contact_address", Storage="_contact", ThisKey="contact_id", OtherKey="ID", IsForeignKey=true)]
		public contact contact
		{
			get
			{
				return this._contact.Entity;
			}
			set
			{
				contact previousValue = this._contact.Entity;
				if (((previousValue != value) 
							|| (this._contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contact.Entity = null;
						previousValue.ext_contact_addresses.Remove(this);
					}
					this._contact.Entity = value;
					if ((value != null))
					{
						value.ext_contact_addresses.Add(this);
						this._contact_id = value.ID;
					}
					else
					{
						this._contact_id = default(int);
					}
					this.SendPropertyChanged("contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.external_contact")]
	public partial class external_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _phone_num1;
		
		private string _phone_num2;
		
		private string _email_address;
		
		private string _job;
		
		private string _comments;
		
		private int _address_id;
		
		private EntitySet<program> _programs;
		
		private EntityRef<wh_address> _wh_address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onphone_num1Changing(string value);
    partial void Onphone_num1Changed();
    partial void Onphone_num2Changing(string value);
    partial void Onphone_num2Changed();
    partial void Onemail_addressChanging(string value);
    partial void Onemail_addressChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void Onaddress_idChanging(int value);
    partial void Onaddress_idChanged();
    #endregion
		
		public external_contact()
		{
			this._programs = new EntitySet<program>(new Action<program>(this.attach_programs), new Action<program>(this.detach_programs));
			this._wh_address = default(EntityRef<wh_address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num1", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string phone_num1
		{
			get
			{
				return this._phone_num1;
			}
			set
			{
				if ((this._phone_num1 != value))
				{
					this.Onphone_num1Changing(value);
					this.SendPropertyChanging();
					this._phone_num1 = value;
					this.SendPropertyChanged("phone_num1");
					this.Onphone_num1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num2", DbType="Char(9)")]
		public string phone_num2
		{
			get
			{
				return this._phone_num2;
			}
			set
			{
				if ((this._phone_num2 != value))
				{
					this.Onphone_num2Changing(value);
					this.SendPropertyChanging();
					this._phone_num2 = value;
					this.SendPropertyChanged("phone_num2");
					this.Onphone_num2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_address", DbType="VarChar(100)")]
		public string email_address
		{
			get
			{
				return this._email_address;
			}
			set
			{
				if ((this._email_address != value))
				{
					this.Onemail_addressChanging(value);
					this.SendPropertyChanging();
					this._email_address = value;
					this.SendPropertyChanged("email_address");
					this.Onemail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="NVarChar(50)")]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(250)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="Int NOT NULL")]
		public int address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._wh_address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="external_contact_program", Storage="_programs", ThisKey="ID", OtherKey="external_contact_id")]
		public EntitySet<program> programs
		{
			get
			{
				return this._programs;
			}
			set
			{
				this._programs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="wh_address_external_contact", Storage="_wh_address", ThisKey="address_id", OtherKey="ID", IsForeignKey=true)]
		public wh_address wh_address
		{
			get
			{
				return this._wh_address.Entity;
			}
			set
			{
				wh_address previousValue = this._wh_address.Entity;
				if (((previousValue != value) 
							|| (this._wh_address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._wh_address.Entity = null;
						previousValue.external_contacts.Remove(this);
					}
					this._wh_address.Entity = value;
					if ((value != null))
					{
						value.external_contacts.Add(this);
						this._address_id = value.ID;
					}
					else
					{
						this._address_id = default(int);
					}
					this.SendPropertyChanged("wh_address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_programs(program entity)
		{
			this.SendPropertyChanging();
			entity.external_contact = this;
		}
		
		private void detach_programs(program entity)
		{
			this.SendPropertyChanging();
			entity.external_contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.phone")]
	public partial class phone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _area_code;
		
		private string _phone_type;
		
		private string _phone_num;
		
		private EntitySet<contact_phone> _contact_phones;
		
		private EntitySet<customer_phone> _customer_phones;
		
		private EntitySet<employee> _employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onarea_codeChanging(string value);
    partial void Onarea_codeChanged();
    partial void Onphone_typeChanging(string value);
    partial void Onphone_typeChanged();
    partial void Onphone_numChanging(string value);
    partial void Onphone_numChanged();
    #endregion
		
		public phone()
		{
			this._contact_phones = new EntitySet<contact_phone>(new Action<contact_phone>(this.attach_contact_phones), new Action<contact_phone>(this.detach_contact_phones));
			this._customer_phones = new EntitySet<customer_phone>(new Action<customer_phone>(this.attach_customer_phones), new Action<customer_phone>(this.detach_customer_phones));
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area_code", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string area_code
		{
			get
			{
				return this._area_code;
			}
			set
			{
				if ((this._area_code != value))
				{
					this.Onarea_codeChanging(value);
					this.SendPropertyChanging();
					this._area_code = value;
					this.SendPropertyChanged("area_code");
					this.Onarea_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_type", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string phone_type
		{
			get
			{
				return this._phone_type;
			}
			set
			{
				if ((this._phone_type != value))
				{
					this.Onphone_typeChanging(value);
					this.SendPropertyChanging();
					this._phone_type = value;
					this.SendPropertyChanged("phone_type");
					this.Onphone_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string phone_num
		{
			get
			{
				return this._phone_num;
			}
			set
			{
				if ((this._phone_num != value))
				{
					this.Onphone_numChanging(value);
					this.SendPropertyChanging();
					this._phone_num = value;
					this.SendPropertyChanged("phone_num");
					this.Onphone_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phone_contact_phone", Storage="_contact_phones", ThisKey="ID", OtherKey="phone_id")]
		public EntitySet<contact_phone> contact_phones
		{
			get
			{
				return this._contact_phones;
			}
			set
			{
				this._contact_phones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phone_customer_phone", Storage="_customer_phones", ThisKey="ID", OtherKey="phone_id")]
		public EntitySet<customer_phone> customer_phones
		{
			get
			{
				return this._customer_phones;
			}
			set
			{
				this._customer_phones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="phone_employee", Storage="_employees", ThisKey="ID", OtherKey="phone_id")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact_phones(contact_phone entity)
		{
			this.SendPropertyChanging();
			entity.phone = this;
		}
		
		private void detach_contact_phones(contact_phone entity)
		{
			this.SendPropertyChanging();
			entity.phone = null;
		}
		
		private void attach_customer_phones(customer_phone entity)
		{
			this.SendPropertyChanging();
			entity.phone = this;
		}
		
		private void detach_customer_phones(customer_phone entity)
		{
			this.SendPropertyChanging();
			entity.phone = null;
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.phone = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.phone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.program")]
	public partial class program : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _program_type;
		
		private string _program_details;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private string _comments;
		
		private string _frequency;
		
		private int _employee_id;
		
		private int _external_contact_id;
		
		private string _coordinator;
		
		private EntitySet<customer_program> _customer_programs;
		
		private EntitySet<volunteer> _volunteers;
		
		private EntitySet<Volunteer_for_customer> _Volunteer_for_customers;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<external_contact> _external_contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onprogram_typeChanging(string value);
    partial void Onprogram_typeChanged();
    partial void Onprogram_detailsChanging(string value);
    partial void Onprogram_detailsChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OnfrequencyChanging(string value);
    partial void OnfrequencyChanged();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onexternal_contact_idChanging(int value);
    partial void Onexternal_contact_idChanged();
    partial void OncoordinatorChanging(string value);
    partial void OncoordinatorChanged();
    #endregion
		
		public program()
		{
			this._customer_programs = new EntitySet<customer_program>(new Action<customer_program>(this.attach_customer_programs), new Action<customer_program>(this.detach_customer_programs));
			this._volunteers = new EntitySet<volunteer>(new Action<volunteer>(this.attach_volunteers), new Action<volunteer>(this.detach_volunteers));
			this._Volunteer_for_customers = new EntitySet<Volunteer_for_customer>(new Action<Volunteer_for_customer>(this.attach_Volunteer_for_customers), new Action<Volunteer_for_customer>(this.detach_Volunteer_for_customers));
			this._employee = default(EntityRef<employee>);
			this._external_contact = default(EntityRef<external_contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_type", DbType="NVarChar(30)")]
		public string program_type
		{
			get
			{
				return this._program_type;
			}
			set
			{
				if ((this._program_type != value))
				{
					this.Onprogram_typeChanging(value);
					this.SendPropertyChanging();
					this._program_type = value;
					this.SendPropertyChanged("program_type");
					this.Onprogram_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_details", DbType="NVarChar(250)")]
		public string program_details
		{
			get
			{
				return this._program_details;
			}
			set
			{
				if ((this._program_details != value))
				{
					this.Onprogram_detailsChanging(value);
					this.SendPropertyChanging();
					this._program_details = value;
					this.SendPropertyChanged("program_details");
					this.Onprogram_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(250)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frequency", DbType="NVarChar(30)")]
		public string frequency
		{
			get
			{
				return this._frequency;
			}
			set
			{
				if ((this._frequency != value))
				{
					this.OnfrequencyChanging(value);
					this.SendPropertyChanging();
					this._frequency = value;
					this.SendPropertyChanged("frequency");
					this.OnfrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL")]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_external_contact_id", DbType="Int NOT NULL")]
		public int external_contact_id
		{
			get
			{
				return this._external_contact_id;
			}
			set
			{
				if ((this._external_contact_id != value))
				{
					if (this._external_contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onexternal_contact_idChanging(value);
					this.SendPropertyChanging();
					this._external_contact_id = value;
					this.SendPropertyChanged("external_contact_id");
					this.Onexternal_contact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coordinator", DbType="NVarChar(250)")]
		public string coordinator
		{
			get
			{
				return this._coordinator;
			}
			set
			{
				if ((this._coordinator != value))
				{
					this.OncoordinatorChanging(value);
					this.SendPropertyChanging();
					this._coordinator = value;
					this.SendPropertyChanged("coordinator");
					this.OncoordinatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="program_customer_program", Storage="_customer_programs", ThisKey="ID", OtherKey="program_id")]
		public EntitySet<customer_program> customer_programs
		{
			get
			{
				return this._customer_programs;
			}
			set
			{
				this._customer_programs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="program_volunteer", Storage="_volunteers", ThisKey="ID", OtherKey="program_id")]
		public EntitySet<volunteer> volunteers
		{
			get
			{
				return this._volunteers;
			}
			set
			{
				this._volunteers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="program_Volunteer_for_customer", Storage="_Volunteer_for_customers", ThisKey="ID", OtherKey="program_id")]
		public EntitySet<Volunteer_for_customer> Volunteer_for_customers
		{
			get
			{
				return this._Volunteer_for_customers;
			}
			set
			{
				this._Volunteer_for_customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_program", Storage="_employee", ThisKey="employee_id", OtherKey="employee_id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.programs.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.programs.Add(this);
						this._employee_id = value.employee_id;
					}
					else
					{
						this._employee_id = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="external_contact_program", Storage="_external_contact", ThisKey="external_contact_id", OtherKey="ID", IsForeignKey=true)]
		public external_contact external_contact
		{
			get
			{
				return this._external_contact.Entity;
			}
			set
			{
				external_contact previousValue = this._external_contact.Entity;
				if (((previousValue != value) 
							|| (this._external_contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._external_contact.Entity = null;
						previousValue.programs.Remove(this);
					}
					this._external_contact.Entity = value;
					if ((value != null))
					{
						value.programs.Add(this);
						this._external_contact_id = value.ID;
					}
					else
					{
						this._external_contact_id = default(int);
					}
					this.SendPropertyChanged("external_contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customer_programs(customer_program entity)
		{
			this.SendPropertyChanging();
			entity.program = this;
		}
		
		private void detach_customer_programs(customer_program entity)
		{
			this.SendPropertyChanging();
			entity.program = null;
		}
		
		private void attach_volunteers(volunteer entity)
		{
			this.SendPropertyChanging();
			entity.program = this;
		}
		
		private void detach_volunteers(volunteer entity)
		{
			this.SendPropertyChanging();
			entity.program = null;
		}
		
		private void attach_Volunteer_for_customers(Volunteer_for_customer entity)
		{
			this.SendPropertyChanging();
			entity.program = this;
		}
		
		private void detach_Volunteer_for_customers(Volunteer_for_customer entity)
		{
			this.SendPropertyChanging();
			entity.program = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.request")]
	public partial class request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _request_id;
		
		private string _request_status;
		
		private string _request_descrip;
		
		private string _comments;
		
		private System.DateTime _request_date;
		
		private int _contact_id;
		
		private int _employee_id;
		
		private string _return_contact;
		
		private EntityRef<contact> _contact;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrequest_idChanging(int value);
    partial void Onrequest_idChanged();
    partial void Onrequest_statusChanging(string value);
    partial void Onrequest_statusChanged();
    partial void Onrequest_descripChanging(string value);
    partial void Onrequest_descripChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void Onrequest_dateChanging(System.DateTime value);
    partial void Onrequest_dateChanged();
    partial void Oncontact_idChanging(int value);
    partial void Oncontact_idChanged();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onreturn_contactChanging(string value);
    partial void Onreturn_contactChanged();
    #endregion
		
		public request()
		{
			this._contact = default(EntityRef<contact>);
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int request_id
		{
			get
			{
				return this._request_id;
			}
			set
			{
				if ((this._request_id != value))
				{
					this.Onrequest_idChanging(value);
					this.SendPropertyChanging();
					this._request_id = value;
					this.SendPropertyChanged("request_id");
					this.Onrequest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_status", DbType="NVarChar(30)")]
		public string request_status
		{
			get
			{
				return this._request_status;
			}
			set
			{
				if ((this._request_status != value))
				{
					this.Onrequest_statusChanging(value);
					this.SendPropertyChanging();
					this._request_status = value;
					this.SendPropertyChanged("request_status");
					this.Onrequest_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_descrip", DbType="NVarChar(250)")]
		public string request_descrip
		{
			get
			{
				return this._request_descrip;
			}
			set
			{
				if ((this._request_descrip != value))
				{
					this.Onrequest_descripChanging(value);
					this.SendPropertyChanging();
					this._request_descrip = value;
					this.SendPropertyChanged("request_descrip");
					this.Onrequest_descripChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(250)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_date", DbType="DateTime NOT NULL")]
		public System.DateTime request_date
		{
			get
			{
				return this._request_date;
			}
			set
			{
				if ((this._request_date != value))
				{
					this.Onrequest_dateChanging(value);
					this.SendPropertyChanging();
					this._request_date = value;
					this.SendPropertyChanged("request_date");
					this.Onrequest_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", DbType="Int NOT NULL")]
		public int contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					if (this._contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL")]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_contact", DbType="NVarChar(250)")]
		public string return_contact
		{
			get
			{
				return this._return_contact;
			}
			set
			{
				if ((this._return_contact != value))
				{
					this.Onreturn_contactChanging(value);
					this.SendPropertyChanging();
					this._return_contact = value;
					this.SendPropertyChanged("return_contact");
					this.Onreturn_contactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contact_request", Storage="_contact", ThisKey="contact_id", OtherKey="ID", IsForeignKey=true)]
		public contact contact
		{
			get
			{
				return this._contact.Entity;
			}
			set
			{
				contact previousValue = this._contact.Entity;
				if (((previousValue != value) 
							|| (this._contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contact.Entity = null;
						previousValue.requests.Remove(this);
					}
					this._contact.Entity = value;
					if ((value != null))
					{
						value.requests.Add(this);
						this._contact_id = value.ID;
					}
					else
					{
						this._contact_id = default(int);
					}
					this.SendPropertyChanged("contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_request", Storage="_employee", ThisKey="employee_id", OtherKey="employee_id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.requests.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.requests.Add(this);
						this._employee_id = value.employee_id;
					}
					else
					{
						this._employee_id = default(int);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.volunteer")]
	public partial class volunteer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _email_address;
		
		private string _comments;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private System.Nullable<int> _program_id;
		
		private EntitySet<Volunteer_for_customer> _Volunteer_for_customers;
		
		private EntityRef<program> _program;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onemail_addressChanging(string value);
    partial void Onemail_addressChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Onprogram_idChanging(System.Nullable<int> value);
    partial void Onprogram_idChanged();
    #endregion
		
		public volunteer()
		{
			this._Volunteer_for_customers = new EntitySet<Volunteer_for_customer>(new Action<Volunteer_for_customer>(this.attach_Volunteer_for_customers), new Action<Volunteer_for_customer>(this.detach_Volunteer_for_customers));
			this._program = default(EntityRef<program>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_address", DbType="VarChar(100)")]
		public string email_address
		{
			get
			{
				return this._email_address;
			}
			set
			{
				if ((this._email_address != value))
				{
					this.Onemail_addressChanging(value);
					this.SendPropertyChanging();
					this._email_address = value;
					this.SendPropertyChanged("email_address");
					this.Onemail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(250)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_id", DbType="Int")]
		public System.Nullable<int> program_id
		{
			get
			{
				return this._program_id;
			}
			set
			{
				if ((this._program_id != value))
				{
					if (this._program.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprogram_idChanging(value);
					this.SendPropertyChanging();
					this._program_id = value;
					this.SendPropertyChanged("program_id");
					this.Onprogram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="volunteer_Volunteer_for_customer", Storage="_Volunteer_for_customers", ThisKey="ID", OtherKey="volunteer_id")]
		public EntitySet<Volunteer_for_customer> Volunteer_for_customers
		{
			get
			{
				return this._Volunteer_for_customers;
			}
			set
			{
				this._Volunteer_for_customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="program_volunteer", Storage="_program", ThisKey="program_id", OtherKey="ID", IsForeignKey=true)]
		public program program
		{
			get
			{
				return this._program.Entity;
			}
			set
			{
				program previousValue = this._program.Entity;
				if (((previousValue != value) 
							|| (this._program.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._program.Entity = null;
						previousValue.volunteers.Remove(this);
					}
					this._program.Entity = value;
					if ((value != null))
					{
						value.volunteers.Add(this);
						this._program_id = value.ID;
					}
					else
					{
						this._program_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("program");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Volunteer_for_customers(Volunteer_for_customer entity)
		{
			this.SendPropertyChanging();
			entity.volunteer = this;
		}
		
		private void detach_Volunteer_for_customers(Volunteer_for_customer entity)
		{
			this.SendPropertyChanging();
			entity.volunteer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer_for_customer")]
	public partial class Volunteer_for_customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _volunteer_id;
		
		private string _customer_id;
		
		private int _program_id;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<program> _program;
		
		private EntityRef<volunteer> _volunteer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvolunteer_idChanging(int value);
    partial void Onvolunteer_idChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onprogram_idChanging(int value);
    partial void Onprogram_idChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    #endregion
		
		public Volunteer_for_customer()
		{
			this._Customer = default(EntityRef<Customer>);
			this._program = default(EntityRef<program>);
			this._volunteer = default(EntityRef<volunteer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_volunteer_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int volunteer_id
		{
			get
			{
				return this._volunteer_id;
			}
			set
			{
				if ((this._volunteer_id != value))
				{
					if (this._volunteer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvolunteer_idChanging(value);
					this.SendPropertyChanging();
					this._volunteer_id = value;
					this.SendPropertyChanged("volunteer_id");
					this.Onvolunteer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int program_id
		{
			get
			{
				return this._program_id;
			}
			set
			{
				if ((this._program_id != value))
				{
					if (this._program.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprogram_idChanging(value);
					this.SendPropertyChanging();
					this._program_id = value;
					this.SendPropertyChanged("program_id");
					this.Onprogram_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Volunteer_for_customer", Storage="_Customer", ThisKey="customer_id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Volunteer_for_customers.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Volunteer_for_customers.Add(this);
						this._customer_id = value.Id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="program_Volunteer_for_customer", Storage="_program", ThisKey="program_id", OtherKey="ID", IsForeignKey=true)]
		public program program
		{
			get
			{
				return this._program.Entity;
			}
			set
			{
				program previousValue = this._program.Entity;
				if (((previousValue != value) 
							|| (this._program.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._program.Entity = null;
						previousValue.Volunteer_for_customers.Remove(this);
					}
					this._program.Entity = value;
					if ((value != null))
					{
						value.Volunteer_for_customers.Add(this);
						this._program_id = value.ID;
					}
					else
					{
						this._program_id = default(int);
					}
					this.SendPropertyChanged("program");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="volunteer_Volunteer_for_customer", Storage="_volunteer", ThisKey="volunteer_id", OtherKey="ID", IsForeignKey=true)]
		public volunteer volunteer
		{
			get
			{
				return this._volunteer.Entity;
			}
			set
			{
				volunteer previousValue = this._volunteer.Entity;
				if (((previousValue != value) 
							|| (this._volunteer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._volunteer.Entity = null;
						previousValue.Volunteer_for_customers.Remove(this);
					}
					this._volunteer.Entity = value;
					if ((value != null))
					{
						value.Volunteer_for_customers.Add(this);
						this._volunteer_id = value.ID;
					}
					else
					{
						this._volunteer_id = default(int);
					}
					this.SendPropertyChanged("volunteer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
